<!--リクエストコメント一覧画面-->
<div class="container">
  <div class="row">
    <div class="col">
      <h2 class="mx-1 my-5 text-secondary border-bottom col-4"><b>リクエスト一覧</b></h2>
        <table class="mx-1 my-2 table table-hover table-inverse align-middle text-secondary">
          <thead>
            <tr>
              <th>ニックネーム</th>
              <th>リクエスト内容</th>
              <!--ワード(不適切な言葉など)でリクエストを検索できる検索窓設置-->
              <% if admin_signed_in? %>
                <th>
                  <!--url: search_public_posts_path=検索内容をresources :postsのget 'search'に送信-->
                  <%= form_with url: search_admin_request_comments_path, local: true, method: :get do |f| %>
                    <!--検索内容をwordとしてdef searchアクションに送る-->
                    <%= f.text_field :word, class:"text-secondary border border-secondary rounded" %>
                    <!--"btn"箇所=検索ボタン記述-->
                      <!--style: =Bootstrap内でのCSS記述（<div>や<link_to>内では上手く動作しないことも）カスタマイズツールなどある-->
                    <%= f.submit "検索", class: "btn btn-outline-secondary", style: "padding:0;" %>
                  <% end %>
                </th>
              <% end %>
            </tr>
          </thead>
          <tbody>
          <% @request_comments.each do |request_comment| %>
            <tr>
              <td>
                <!--リクエストコメントしたお客様のニックネーム表示する-->
                <%= request_comment.customer.name %>
              </td>
              <td>
                <%= request_comment.content %>
              </td>
                <!--コメントをしたユーザ以外にはDestroyボタン表示しない記述-->
                <% if request_comment.customer == current_customer || current_admin %>
              <td>
                <!--(@book=book_idのこと) book_comment#destroyのパス（book_book_comment_path）-->
                  <!--remote: true=非同期通信行うためのオプション（Railsはデフォルトで非同期通信を処理するライブラリが組み込まれているので実装時ページがリロードされず変更を反映できる）-->
                <%= link_to "削除", admin_request_comment_path(request_comment), method: :delete, data: { confirm: '本当に消しますか？' }, class: "btn btn-sm btn-outline-danger float-end" %>
              </td>
                <% end %>
            </tr>
          <% end %>
          </tbody>
        </table>
      <!--kaminari(ページネーション)記述-->
      <div class="mx-1">
        <%= paginate @request_comments %>
      </div>
    </div>
  </div>
</div>
<!--model/user.rbのget_profile_imageに合わせる（100,100）を, size:'100x100'に変更-->
    <!--<td><%#= image_tag book_comment.user.get_profile_image, size:'100x100' %></td>-->
<!--コメントしたのがログインユーザなら削除ボタン表示で削除できる記述-->
<!--削除後は投稿詳細(books/show)へリダイレクトされる記述-->
  <%#= link_to "削除", book_book_comment_path(book_comment.book, book_comment), method: :delete %>
